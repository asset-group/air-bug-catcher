from fuzzlog.fuzzlog import BoardType, Crash, FuzzedPkt, FuzzLog, ProtocolType


class Exploiter:
    """
    Exploiter class contains the specific logic for generating and running exploits.
    The detailed implementation for different protocols and devices can be found in this folder.
    Attributes
    ----------
    session_id : str
        Session id
    protocol : ProtocolType
        Protocol of the exploiter
    board : BoardType
        Board of the exploiter
    fuzzlog : FuzzLog
        Fuzzing logs used in the exploiter
    """

    def __init__(
        self, *, session_id: str, protocol: ProtocolType, board: BoardType, fuzzlog: FuzzLog
    ) -> None:
        self.session_id = session_id
        self.protocol = protocol
        self.board = board
        self.fuzzlog = fuzzlog

    def gen_script(self, trial_pkts: list[FuzzedPkt]) -> tuple[str, str]:
        """
        Generate exploit from the trial packets (test scenario).

        Parameters
        ----------
        trial_pkts : list[FuzzedPkt]
            Fuzzed packets that need to be present in the generated exploit

        Returns
        -------
        exploit_name : str
            Name of the generated flooding exploit
        exploit_path : str
            Path to the generated flooding exploit
        """
        raise NotImplementedError

    def flood_script_generator(self, crash: Crash):
        """
        Generate flooding exploit from a crash.

        Parameters
        ----------
        crash : Crash

        Returns
        -------
        exploit_name : str
            Name of the generated flooding exploit
        exploit_path : str
            Path to the generated flooding exploit
        """
        raise NotImplementedError

    # def run_exploit(self, exploit_name: str, exploit_path: str) -> tuple[bool, list[str]]:
    #     raise NotImplementedError

    def run_exploit_once(
        self, exploit_name: str, exploit_path: str, target_crash_type: str
    ) -> tuple[bool, str]:
        """
        Exploit runner.

        Parameters
        ----------
        exploit_name : str
            Name of the generated flooding exploit
        exploit_path : str
            Path to the generated flooding exploit
        crash_type : str
            Type of crash, possible values are `normal`, `timeout` and `flooding`

        Returns
        -------
        crash_triggered : bool
            Any crash (can be desired or not desired) is triggered
        crash_id : str | None
            Crash identifier if a crash is triggered
        """
        raise NotImplementedError
